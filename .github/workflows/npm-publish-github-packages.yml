name: Deploy to Client's Server

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js for Backend
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        working-directory: ./backend

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.THINGSBOARD_SSH }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 192.168.29.32 >> ~/.ssh/known_hosts

    - name: Deploy Backend
      env:
        ENV_CONTENTS: ${{ secrets.CLIENT1_ENV }}
      run: |
        echo "$ENV_CONTENTS" > backend/.env
        rsync -avz --no-group --exclude '.git/' --exclude '.github/' --no-perms --no-times ./backend/ thingsboard1@192.168.29.32:/var/www/client2_backend/

    - name: Install and Start Backend
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 192.168.29.32
        username: thingsboard1
        key: ${{ secrets.THINGSBOARD_SSH }}
        script: |
          cd /var/www/client2_backend
          whoami
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          npm install
          pm2 restart --node-args='--env-file=.env' app.js || pm2 start --node-args='--env-file=.env' app.js

    - name: Setup Node.js for Frontend
      uses: actions/setup-node@v2
      with:
        node-version: '20'
        working-directory: ./frontend

    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build

    - name: Deploy Frontend
      run: |
        rsync -avz --no-group --exclude '.git/' --exclude '.github/' --no-perms --no-times ./frontend/build/ thingsboard1@192.168.29.32:/var/www/client2_frontend/
