name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js 20
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Deploy to Client 1
      if: github.ref == 'refs/heads/main'
      env:
        DEPLOY_SSH_KEY: ${{ secrets.CLIENT1_SSH_KEY }}
        ENV_CONTENTS: ${{ secrets.CLIENT1_ENV }}
      run: |
        echo "$ENV_CONTENTS" > .env
        echo "$DEPLOY_SSH_KEY" > deploy_key
        chmod 600 deploy_key
        rsync -avz --no-perms --no-times --exclude=node_modules --exclude=.git --exclude=deploy_key --exclude=.env* --exclude=.github/ -e "ssh -o StrictHostKeyChecking=no -i deploy_key" ./ ubuntu@work.memighty.com:/var/www/client1_backend/
        ssh -o StrictHostKeyChecking=no -i deploy_key ubuntu@work.memighty.com 'cd /var/www/client1_backend && npm install && pm2 start --node-args="--env-file=.env" app.js'
        rm -f deploy_key

    - name: Deploy to Client 2
      if: github.ref == 'refs/heads/main'
      env:
        DEPLOY_SSH_KEY: ${{ secrets.CLIENT2_SSH_KEY }}
        ENV_CONTENTS: ${{ secrets.CLIENT2_ENV }}
      run: |
        echo "$ENV_CONTENTS" > .env
        echo "$DEPLOY_SSH_KEY" > deploy_key
        chmod 600 deploy_key
        rsync -avz --no-perms --no-times --exclude=node_modules --exclude=.git --exclude=deploy_key --exclude=.env* --exclude=.github/ -e "ssh -o StrictHostKeyChecking=no -i deploy_key" ./ mlora1@testtracker.ddnsfree.com:/var/www/client2_backend/
        ssh -o StrictHostKeyChecking=no -i deploy_key mlora1@testtracker.ddnsfree.com 'cd /var/www/client2_backend && npm install && pm2 start --node-args="--env-file=.env" app.js'
        rm -f deploy_key

